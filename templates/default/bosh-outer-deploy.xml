<%
  cfg = @vars['_']
  datacenter = @vars['deployments']['datacenter']
  environment = @vars['deployments']['environment']
  deployment_name = cfg['deployment']['name']
  deployment = cfg['deployment']['config']
  release_name = cfg['release']['name']
  release = cfg['release']['config']
  bosh_name = cfg['bosh']['name']
  bosh = cfg['bosh']['config']
  job_name = cfg['job_name']
%>
<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url><%= @vars['git_repos']['bosh_manifests']['address'] %></url>
        <credentialsId><%= @vars['git_repos']['bosh_manifests']['credential'] %></credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name><%= @vars['git_repos']['bosh_manifests']['branch'] %></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.28">
      <project>stemcell-tgz-<%= deployment['stemcell'] %></project>
      <filter>stemcell.tgz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>bundle install

export DEPLOYMENT_NAME="<%= deployment['name'] %>"
export DEPLOYMENT_DESC="<%= deployment['description'] %>"
export BOSH_ROOT_DOMAIN=<%= deployment['root_domain'] %>
export BOSH_DNS_RECURSOR=<%= deployment['dns_recursor'] %>
export OUTER_BOSH_IP=<%= deployment['director_ip'] %>
export MANIFEST_TEMPLATE=<%= deployment['manifest_template'] %>
export MANIFEST_FINAL=deployments/<%= deployment_name %>/<%= @vars['iaas'] %>/micro_bosh.yml

export GOPATH=~/go
export PATH=~/go/bin:/usr/local/go/bin:$PATH
go get -v github.com/cloudfoundry-incubator/spiff

rake manifest:create[&quot;<%= deployment_name %>&quot;,&quot;live&quot;,&quot;<%= datacenter %>&quot;,&quot;<%= environment %>&quot;,&quot;${MANIFEST_FINAL}&quot;]

cd $WORKSPACE/deployments/<%= deployment_name %>
bundle exec bosh -n micro deployment <%= @vars['iaas'] %>
bundle exec bosh -n micro deploy $WORKSPACE/stemcell.tgz --update-if-exists</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
    <artifacts>deployments/<%= deployment_name %>/bosh-deployments.yml, deployments/<%= deployment_name %>/manifest.yml</artifacts>
    <latestOnly>false</latestOnly>
    <allowEmptyArchive>false</allowEmptyArchive>
    <onlyIfSuccessful>true</onlyIfSuccessful>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <ruby-proxy-object>
      <ruby-object ruby-class="Jenkins::Tasks::BuildWrapperProxy" pluginid="rbenv">
        <object ruby-class="RbenvWrapper" pluginid="rbenv">
          <rbenv__root pluginid="rbenv" ruby-class="String">$HOME/.rbenv</rbenv__root>
          <ruby__build__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/ruby-build.git</ruby__build__repository>
          <rbenv__revision pluginid="rbenv" ruby-class="String">master</rbenv__revision>
          <rbenv__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/rbenv.git</rbenv__repository>
          <ruby__build__revision pluginid="rbenv" ruby-class="String">master</ruby__build__revision>
          <gem__list pluginid="rbenv" ruby-class="String">bundler,rake</gem__list>
          <version pluginid="rbenv" ruby-class="String">1.9.3-p484</version>
          <ignore__local__version ruby-class="FalseClass" pluginid="rbenv"/>
        </object>
        <pluginid pluginid="rbenv" ruby-class="String">rbenv</pluginid>
      </ruby-object>
    </ruby-proxy-object>
  </buildWrappers>
</project>
