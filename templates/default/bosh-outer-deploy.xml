<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url><%= @vars['git_repos']['bosh_manifests']['address'] %></url>
        <credentialsId><%= @vars['git_repos']['bosh_manifests']['credential'] %></credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name><%= @vars['git_repos']['bosh_manifests']['branch'] %></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.28">
      <project>stemcell-tgz</project>
      <filter>stemcell.tgz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>bundle install

export DEPLOYMENT_NAME=<%= @vars['outer_bosh']['deployment_name'] %>
export DEPLOYMENT_DESC=<%= @vars['outer_bosh']['deployment_description'] %>
export OUTER_BOSH_IP=<%= @vars['outer_bosh']['director_ip'] %>
export MANIFEST_TEMPLATE=<%= @vars['manifest_templates']['outer_bosh'] %>
export MANIFEST_FINAL=outer_bosh/<%= @vars['iaas'] %>/micro_bosh.yml

<%
  case @vars['iaas']
  when 'openstack'
    %>
    export OS_AUTH_URL=<%= @vars['openstack']['auth_url'] %>
    export OS_USERNAME=<%= @vars['openstack']['user'] %>
    export OS_PASSWORD=<%= @vars['openstack']['api_key'] %>
    export OS_TENANT=<%= @vars['openstack']['tenant'] %>
    export KEY_NAME=outerbosh
    export PRIVATE_KEY_PATH=${WORKSPACE}/${KEY_NAME}.pem
    ssh-keygen -t rsa -f ${PRIVATE_KEY_PATH} -q -N &quot;&quot;
    nova keypair-delete ${KEY_NAME} | exit 0
    nova keypair-add --pub_key ${WORKSPACE}/outerbosh.pem.pub ${KEY_NAME} | exit 0
    <%
  when 'vsphere'
    %>
    export VSPHERE_CONNECTION='<%= JSON.generate(@vars['iaas_config']['connection']['outer_bosh']['vcenters']) %>'
    RUBY_SCRIPT="require 'json'; data = YAML::load(STDIN.read); vconn = JSON.parse(ENV['VSPHERE_CONNECTION']); data['cloud']['properties']['vcenters'] = vconn; File.open(ENV['MANIFEST_TEMPLATE'], 'w') { |file| file.write(data.to_yaml) }"
    cat ${MANIFEST_TEMPLATE} | ruby -ryaml -e "$RUBY_SCRIPT"
    <%
  end
%>

rake manifest:prepare[&quot;${MANIFEST_TEMPLATE}&quot;,&quot;${MANIFEST_FINAL}&quot;]

cd $WORKSPACE/outer_bosh
bundle exec bosh -n micro deployment <%= @vars['iaas'] %>
bundle exec bosh -n micro deploy $WORKSPACE/stemcell.tgz --update-if-exists</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
    <artifacts>outer_bosh/bosh-deployments.yml</artifacts>
    <latestOnly>false</latestOnly>
    <allowEmptyArchive>false</allowEmptyArchive>
    <onlyIfSuccessful>true</onlyIfSuccessful>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <ruby-proxy-object>
      <ruby-object ruby-class="Jenkins::Tasks::BuildWrapperProxy" pluginid="rbenv">
        <object ruby-class="RbenvWrapper" pluginid="rbenv">
          <rbenv__root pluginid="rbenv" ruby-class="String">$HOME/.rbenv</rbenv__root>
          <ruby__build__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/ruby-build.git</ruby__build__repository>
          <rbenv__revision pluginid="rbenv" ruby-class="String">master</rbenv__revision>
          <rbenv__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/rbenv.git</rbenv__repository>
          <ruby__build__revision pluginid="rbenv" ruby-class="String">master</ruby__build__revision>
          <gem__list pluginid="rbenv" ruby-class="String">bundler,rake</gem__list>
          <version pluginid="rbenv" ruby-class="String">1.9.3-p484</version>
          <ignore__local__version ruby-class="FalseClass" pluginid="rbenv"/>
        </object>
        <pluginid pluginid="rbenv" ruby-class="String">rbenv</pluginid>
      </ruby-object>
    </ruby-proxy-object>
  </buildWrappers>
</project>
