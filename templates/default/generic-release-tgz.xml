<%
  release_name = @vars['release']['name']
  release_config = @vars['release']['config']
  git_repo = @vars['git_repos'][release_config['git_repo']]
%>
<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>2</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.0.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url><%= git_repo['address'] %></url>
        <credentialsId><%= git_repo['credential'] %></credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name><%= git_repo['branch'] %></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
        <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch><%= git_repo['branch'] %></localBranch>
        </hudson.plugins.git.extensions.impl.LocalBranch>
        <hudson.plugins.git.extensions.impl.SubmoduleOption>
          <disableSubmodules>false</disableSubmodules>
          <recursiveSubmodules>true</recursiveSubmodules>
          <trackingSubmodules>false</trackingSubmodules>
        </hudson.plugins.git.extensions.impl.SubmoduleOption>        
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
        <command>
<% if release_config['build_mode'] == 'dev' %>
git branch --set-upstream-to=origin/<%= git_repo['branch'] %> <%= git_repo['branch'] %>

export DEV_RELEASE_YML=$WORKSPACE/config/dev.yml

if ! gem spec bosh_cli > /dev/null 2&gt;&amp;1 ; then
  gem install bosh_cli bosh_cli_plugin_micro
fi

cat &lt;&lt; EOF &gt; $DEV_RELEASE_YML
---
dev_name: <%= release_config['dev_name'] %>
EOF

bosh -n create release --with-tarball --force

RELEASE_PATH=${WORKSPACE}/dev_releases
RELEASE_YML=`ls -t $RELEASE_PATH/<%= release_config['dev_name'] %>/*.yml | grep -v index.yml | tee | head -1`

<% else %>

RELEASE_PATH=${WORKSPACE}/releases
LATEST_RELEASE_FILE=&quot;$WORKSPACE/latest_release.txt&quot;
if [ -f $LATEST_RELEASE_FILE ]; 
then
  RELEASE_YML=`cat $LATEST_RELEASE_FILE`
else
  LATEST_RELEASE_GIT=`git rev-list --reverse --tags --max-count=1 releases/*.yml`
  RELEASE_YML=`git diff-tree --no-commit-id --name-only -r $LATEST_RELEASE_GIT | grep -e &apos;releases\/*.yml&apos;` 
fi

<% end %>

RUBY_SCRIPT=&quot;data = YAML::load(STDIN.read); puts \&quot;#{data[&apos;name&apos;]} #{data[&apos;version&apos;]}\&quot;&quot; 
RELEASE_PROPS=`cat $RELEASE_YML | ruby -ryaml -e &quot;$RUBY_SCRIPT&quot;`
read RELEASE_NAME RELEASE_VERSION &lt;&lt;&lt;$(echo $RELEASE_PROPS) 

echo &quot;${RELEASE_NAME} ${RELEASE_VERSION}&quot; &gt; release_version.txt

mv ${RELEASE_PATH}/<%= release_config['dev_name'] %>/${RELEASE_NAME}-${RELEASE_VERSION}.tgz $WORKSPACE/release.tgz</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>release.tgz, release_version.txt</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <ruby-proxy-object>
      <ruby-object ruby-class="Jenkins::Tasks::BuildWrapperProxy" pluginid="rbenv">
        <pluginid pluginid="rbenv" ruby-class="String">rbenv</pluginid>
        <object ruby-class="RbenvWrapper" pluginid="rbenv">
          <ruby__build__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/ruby-build.git</ruby__build__repository>
          <rbenv__root pluginid="rbenv" ruby-class="String">$HOME/.rbenv</rbenv__root>
          <rbenv__revision pluginid="rbenv" ruby-class="String">master</rbenv__revision>
          <rbenv__repository pluginid="rbenv" ruby-class="String">https://github.com/sstephenson/rbenv.git</rbenv__repository>
          <ruby__build__revision pluginid="rbenv" ruby-class="String">master</ruby__build__revision>
          <gem__list pluginid="rbenv" ruby-class="String">bundler,rake</gem__list>
          <version pluginid="rbenv" ruby-class="String">1.9.3-p484</version>
          <ignore__local__version ruby-class="FalseClass" pluginid="rbenv"/>
        </object>
      </ruby-object>
    </ruby-proxy-object>
  </buildWrappers>
</project>
